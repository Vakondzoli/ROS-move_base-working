<?xml version="1.0"?>

<robot name="diff_drive" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!--locatoin given to rest of xacro files containing rest of informations and functions-->
<xacro:include filename="$(find simulation_pkg)/model/my_robot.gazebo"/>
<xacro:include filename="$(find simulation_pkg)/model/inertia.xacro"/>
<xacro:include filename="$(find simulation_pkg)/model/materials.xacro"/>
<xacro:include filename="$(find simulation_pkg)/model/parameters.xacro"/>

<!--gazebo has model editor to create the robot-->

    <!--dummylink-->
    <link name="base_link">				
        <pose>0 0 0 0 0 0</pose>    <!--geometry_msgs/Pose.msg, representation of pose in free space, composed of position and orientation.-->
    </link>
    <joint type="fixed" name="base_link_to_chassis">
        <child link="chassis_link"/>
        <parent link="base_link"/>
    </joint>

     <!--chassis link which is our robot base with the fron wheel included-->
    <link name="chassis_link">				
        <pose>0 0 0 0 0 0</pose>
        <inertial>
            <mass value="${mass_chassis}"/>
            <xacro:box_inertia m="${mass_chassis}" x="${x_chassis}" y="${y_chassis}" z="${z_chassis}"/>
        </inertial>

        <collision name="collision">
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${x_chassis} ${y_chassis} ${z_chassis}"/>
            </geometry>
        </collision>
        <visual name="base_link_visual">
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${x_chassis} ${y_chassis} ${z_chassis}"/>
            </geometry>
            <material name="blue"/>
        </visual>        
        <!--front wheel will not roatate or move but slipping is set to 1.0 and no friction-->
        <collision name="caster_collision">
            <origin xyz="${-(radius_wheel/2)+x_chassis/2} 0 ${-z_chassis/2}" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${radius_wheel/2}"/>
            </geometry>
            <surface>
                <friction>
                    <ode>
                        <mu>0</mu>
                        <mu2>0</mu2>
                        <slip1>1.0</slip1>
                        <slip2>1.0</slip2>
                    </ode>
                </friction>
            </surface>                   
        </collision>         
         <visual name="caster_visual">
            <origin xyz="${-(radius_wheel/2)+x_chassis/2} 0 ${-z_chassis/2}" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${radius_wheel/2}"/>
            </geometry>
        </visual>                
    </link>   



    <!--left wheel link to add now-->
    <link name="left_wheel">
        <collision name="collision">
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
            <geometry>
                <cylinder radius="${radius_wheel}" length="${height_wheel}"/>
            </geometry>
             <surface>
                <friction>
                    <ode>
                        <mu>1.0</mu>
                        <mu2>1.0</mu2>
                        <slip1>0.0</slip1>
                        <slip2>0.0</slip2>
                    </ode>
                </friction>
            </surface>             
        </collision>
        <visual name="left_wheel_visual">
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
            <geometry>
                <cylinder radius="${radius_wheel}" length="${height_wheel}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <inertial>
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
            <mass value="${mass_wheel}"/>
            <cylinder_inertia m="${mass_wheel}" r="${radius_wheel}" h="${height_wheel}"/>
            <xacro:cylinder_inertia m="${mass_wheel}" r="${radius_wheel}" h="${height_wheel}"/>
        </inertial>        
    </link>   



     <!--right wheel link to add now-->
    <link name="right_wheel">
        <collision name="collision">
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
            <geometry>
                <cylinder radius="${radius_wheel}" length="${height_wheel}"/>
            </geometry>
             <surface>
                <friction>
                    <ode>
                        <mu>1.0</mu>
                        <mu2>1.0</mu2>
                        <slip1>0.0</slip1>
                        <slip2>0.0</slip2>
                    </ode>
                </friction>
            </surface>             
        </collision>
        <visual name="right_wheel_visual">
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
            <geometry>
                <cylinder radius="${radius_wheel}" length="${height_wheel}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <inertial>
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
            <mass value="${mass_wheel}"/>  
            <cylinder_inertia m="${mass_wheel}" r="${radius_wheel}" h="${height_wheel}"/>       
            <xacro:cylinder_inertia m="${mass_wheel}" r="${radius_wheel}" h="${height_wheel}"/>
        </inertial>        
    </link>   



    <!--define the joints (continious) taht can be controlled through ROS--> 
    <joint type="continuous" name="left_wheel_hinge">
        <origin xyz="${-x_chassis/4} ${y_chassis/2+height_wheel/2} ${radius_wheel/2-z_chassis/2}" rpy="0 0 0"/>
        <child link="left_wheel"/>
        <parent link="base_link"/>
        <axis xyz="0 1 0 " rpy="0 0 0"/>
        <limit effort="100" velocity="100"/>
        <joint_properties damping="0.0" friction="0.0"/>
    </joint>
    
    <joint type="continuous" name="right_wheel_hinge">
        <origin xyz="${-x_chassis/4} ${-y_chassis/2-height_wheel/2} ${radius_wheel/2-z_chassis/2}" rpy="0 0 0"/>
        <child link="right_wheel"/>
        <parent link="base_link"/>
        <axis xyz="0 1 0 " rpy="0 0 0"/>
        <limit effort="100" velocity="100"/>
        <joint_properties damping="0.0" friction="0.0"/>    
    </joint>



    <!--IMU and LIDAR (COPY FROM TURTLEBOT URDF FROM GITHUB)

    <joint name="imu_joint" type="fixed">
        <parent link="base_link"/>
        <child link="imu_link"/>
        <origin xyz="-0.032 0 0.068" rpy="0 0 0"/>
    </joint>

    <link name="imu_link"/>
-->



    <joint name="laser_joint" type="fixed">            
        <parent link="base_link"/>
        <child link="laser_link"/>
        <origin xyz="0 0 ${z_chassis}" rpy="0 0 0"/>
    </joint>  

    <link name="laser_link">
      <visual>
        <origin xyz="0 0 0.0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://turtlebot3_description/meshes/sensors/lds.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="black"/>
      </visual>  
      <collision>
        <origin xyz="0.015 0 -0.0065" rpy="0 0 0"/>
        <geometry>
          <cylinder length="0.0315" radius="0.055"/>
        </geometry>
      </collision>  
      <inertial>
        <mass value="0.114" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
    </link>
    <!-- CAMERA -->
    <link name="camera_link">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
            <box size="0.05 0.05 0.05"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
            <box size="0.05 0.05 0.05"/>
            </geometry>
            <material name="blue"/>
        </visual>

        <inertial>
            <mass value="1e-5" />
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
    </link>

    <joint name="camera_joint" type="fixed">
        <axis xyz="0 1 0" />
        <origin xyz="${x_cam} ${y_cam} ${z_cam}" rpy="0 0.5 0"/>
        <parent link="base_link"/>
        <child link="camera_link"/>
    </joint>
</robot>